Evoluções Parte 1:

    Melhorias:
        * Banner personalizado
        * Readme bem organizado
        * Modelagem

Evoluções Parte 2:

    Remodelagem - Link para acesso: https://dbdiagram.io/d/60e4eb4b0b1d8a6d3969eb01

Evoluções Parte 3:

    Tarefas:

        * Usar JWT para a autenticação.
        * Saber se é necessário o UsuarioLoginForm.
        * Fazer o CRUD de todos os models.
        * Ler sobre @ApiResponses https://www.treinaweb.com.br/blog/documentando-uma-api-spring-boot-com-o-swagger
        * Resolver o problema da funcionalidade do mvn test.

    Dúvidas:

        #01 Qual o nível de maturidade da api?

        #02 Qual o papel da cada Bean no Spring, Controller, Service, Entity, Repository?

        #03 Qual a melhor forma de gerenciar e padronizar os erros?

        #04 Saber sobre padrões de service, as interfaces e os implementações e o por quê?

        #05 Quanto a salvar ou atualizar, o melhor é devolver o objeto com ID (TransacaoService)?

        #06 A criação de um form seria a melhor forma de criar um objeto para filtragem (TransaçãoService.buscar)?

        #07 Quando os Beans Validations não são tão bons assim?

        #08 Como personalizar os erros de ValidationBeans?

        #09 É necessário um Form quando Entity é igual? (Acho que já entendi isso por conta do campo Id)

        #10 É uma boa consultar antes de deletar/atualizar?

        #11 Se eu for delatar um item e não encontrar, o retorno deve ser noContent, notFound ou badRequest?

        #12 Teria como o readme do projeto ter a porcentagem de cobertura de código testado?

        #13 Muitos problemas com testes na camada de serviço por conta das dependências (TransacaoServiceImplTest).

        #14 Não consegui criar um utils, nos testes, que seja injetável para Spring, classe TransacaoUtils, por quê?

        #15 O que fazer quando não deseja que um campo seja atualizado, ele não está no form, mas é o risco de ficar null?

        #16 Como melhorar o padrão de validações de objetos de entrada dos controllers?

        #17 Como melhorar a validação feita no TransacaoServiceImpl?

        #18 Para validações diferentes na mesma entity, quando o método salvar é uma validação e o editar outra
        como fazer, um form pra cada?

        #19 Quando uso no Controller um Service como o UsuarioService, como ele sabe que deve chamar o UsuarioServiceImpl?

        #20 Qual o padrão de resposta para cada método do http?

        #21 Como melhorar a qualidade das respostas dos controllers? (ResponseEntity melhor trabalhado)


Evoluções Parte 4:

    Deploy CI/CD: https://github.com/marketplace/actions/deploy-to-heroku